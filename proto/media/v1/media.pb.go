// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/media/v1/media.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages
type Media struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedBy        string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size             int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Url              string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	MimeType         string                 `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Type             string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Width            int32                  `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"`
	Height           int32                  `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Duration         int32                  `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	ProcessingStatus string                 `protobuf:"bytes,11,opt,name=processing_status,json=processingStatus,proto3" json:"processing_status,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_proto_media_v1_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{0}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Media) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Media) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Media) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Media) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Media) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Media) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Media) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Media) GetProcessingStatus() string {
	if x != nil {
		return x.ProcessingStatus
	}
	return ""
}

func (x *Media) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Media) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Media) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MediaVariant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MediaId       string                 `protobuf:"bytes,2,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Size          string                 `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	Url           string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FileSize      int64                  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Width         int32                  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	Quality       int32                  `protobuf:"varint,9,opt,name=quality,proto3" json:"quality,omitempty"`
	Format        string                 `protobuf:"bytes,10,opt,name=format,proto3" json:"format,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaVariant) Reset() {
	*x = MediaVariant{}
	mi := &file_proto_media_v1_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaVariant) ProtoMessage() {}

func (x *MediaVariant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaVariant.ProtoReflect.Descriptor instead.
func (*MediaVariant) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{1}
}

func (x *MediaVariant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaVariant) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *MediaVariant) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MediaVariant) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *MediaVariant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaVariant) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MediaVariant) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaVariant) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MediaVariant) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *MediaVariant) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *MediaVariant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Upload requests/responses
type UploadMediaStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaStreamRequest) Reset() {
	*x = UploadMediaStreamRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaStreamRequest) ProtoMessage() {}

func (x *UploadMediaStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaStreamRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{2}
}

func (x *UploadMediaStreamRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadMediaStreamRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UploadMediaStreamRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UploadMediaChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadMediaChunk_Info
	//	*UploadMediaChunk_Chunk
	Data          isUploadMediaChunk_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaChunk) Reset() {
	*x = UploadMediaChunk{}
	mi := &file_proto_media_v1_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaChunk) ProtoMessage() {}

func (x *UploadMediaChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaChunk.ProtoReflect.Descriptor instead.
func (*UploadMediaChunk) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{3}
}

func (x *UploadMediaChunk) GetData() isUploadMediaChunk_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadMediaChunk) GetInfo() *UploadMediaStreamRequest {
	if x != nil {
		if x, ok := x.Data.(*UploadMediaChunk_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *UploadMediaChunk) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadMediaChunk_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadMediaChunk_Data interface {
	isUploadMediaChunk_Data()
}

type UploadMediaChunk_Info struct {
	Info *UploadMediaStreamRequest `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadMediaChunk_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadMediaChunk_Info) isUploadMediaChunk_Data() {}

func (*UploadMediaChunk_Chunk) isUploadMediaChunk_Data() {}

type UploadMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaResponse) Reset() {
	*x = UploadMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaResponse) ProtoMessage() {}

func (x *UploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaResponse.ProtoReflect.Descriptor instead.
func (*UploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{4}
}

func (x *UploadMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type UploadMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	OutputFile    string                 `protobuf:"bytes,4,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FileData      []byte                 `protobuf:"bytes,6,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{5}
}

func (x *UploadMediaRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadMediaRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UploadMediaRequest) GetOutputFile() string {
	if x != nil {
		return x.OutputFile
	}
	return ""
}

func (x *UploadMediaRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadMediaRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{6}
}

func (x *GetMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaResponse) Reset() {
	*x = GetMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaResponse) ProtoMessage() {}

func (x *GetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaResponse.ProtoReflect.Descriptor instead.
func (*GetMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{7}
}

func (x *GetMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type ListMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedBy     string                 `protobuf:"bytes,1,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy        string                 `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder     string                 `protobuf:"bytes,7,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediaRequest) Reset() {
	*x = ListMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediaRequest) ProtoMessage() {}

func (x *ListMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediaRequest.ProtoReflect.Descriptor instead.
func (*ListMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{8}
}

func (x *ListMediaRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListMediaRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListMediaRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ListMediaRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMediaRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListMediaRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListMediaRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediaResponse) Reset() {
	*x = ListMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediaResponse) ProtoMessage() {}

func (x *ListMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediaResponse.ProtoReflect.Descriptor instead.
func (*ListMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{9}
}

func (x *ListMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ListMediaResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMediaRequest) Reset() {
	*x = UpdateMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMediaRequest) ProtoMessage() {}

func (x *UpdateMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMediaRequest.ProtoReflect.Descriptor instead.
func (*UpdateMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMediaRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UpdateMediaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMediaRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMediaResponse) Reset() {
	*x = UpdateMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMediaResponse) ProtoMessage() {}

func (x *UpdateMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMediaResponse.ProtoReflect.Descriptor instead.
func (*UpdateMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type DeleteMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaRequest) Reset() {
	*x = DeleteMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaRequest) ProtoMessage() {}

func (x *DeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*DeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteMediaRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type DeleteMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaResponse) Reset() {
	*x = DeleteMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaResponse) ProtoMessage() {}

func (x *DeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*DeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetMediaVariantsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaVariantsRequest) Reset() {
	*x = GetMediaVariantsRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaVariantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaVariantsRequest) ProtoMessage() {}

func (x *GetMediaVariantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaVariantsRequest.ProtoReflect.Descriptor instead.
func (*GetMediaVariantsRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{14}
}

func (x *GetMediaVariantsRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type GetMediaVariantsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Variants      []*MediaVariant        `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaVariantsResponse) Reset() {
	*x = GetMediaVariantsResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaVariantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaVariantsResponse) ProtoMessage() {}

func (x *GetMediaVariantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaVariantsResponse.ProtoReflect.Descriptor instead.
func (*GetMediaVariantsResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{15}
}

func (x *GetMediaVariantsResponse) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type ProcessMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMediaRequest) Reset() {
	*x = ProcessMediaRequest{}
	mi := &file_proto_media_v1_media_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMediaRequest) ProtoMessage() {}

func (x *ProcessMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMediaRequest.ProtoReflect.Descriptor instead.
func (*ProcessMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{16}
}

func (x *ProcessMediaRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type ProcessMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMediaResponse) Reset() {
	*x = ProcessMediaResponse{}
	mi := &file_proto_media_v1_media_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMediaResponse) ProtoMessage() {}

func (x *ProcessMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_v1_media_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMediaResponse.ProtoReflect.Descriptor instead.
func (*ProcessMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_v1_media_proto_rawDescGZIP(), []int{17}
}

func (x *ProcessMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_media_v1_media_proto protoreflect.FileDescriptor

const file_proto_media_v1_media_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/media/v1/media.proto\x12\bmedia.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x86\x04\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x10\n" +
	"\x03url\x18\x05 \x01(\tR\x03url\x12\x1b\n" +
	"\tmime_type\x18\x06 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x14\n" +
	"\x05width\x18\b \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\t \x01(\x05R\x06height\x12\x1a\n" +
	"\bduration\x18\n" +
	" \x01(\x05R\bduration\x12+\n" +
	"\x11processing_status\x18\v \x01(\tR\x10processingStatus\x129\n" +
	"\bmetadata\x18\f \x03(\v2\x1d.media.v1.Media.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x02\n" +
	"\fMediaVariant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bmedia_id\x18\x02 \x01(\tR\amediaId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04size\x18\x04 \x01(\tR\x04size\x12\x10\n" +
	"\x03url\x18\x05 \x01(\tR\x03url\x12\x1b\n" +
	"\tfile_size\x18\x06 \x01(\x03R\bfileSize\x12\x14\n" +
	"\x05width\x18\a \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\b \x01(\x05R\x06height\x12\x18\n" +
	"\aquality\x18\t \x01(\x05R\aquality\x12\x16\n" +
	"\x06format\x18\n" +
	" \x01(\tR\x06format\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xe1\x01\n" +
	"\x18UploadMediaStreamRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12L\n" +
	"\bmetadata\x18\x04 \x03(\v20.media.v1.UploadMediaStreamRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"l\n" +
	"\x10UploadMediaChunk\x128\n" +
	"\x04info\x18\x01 \x01(\v2\".media.v1.UploadMediaStreamRequestH\x00R\x04info\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"<\n" +
	"\x13UploadMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\"\x93\x02\n" +
	"\x12UploadMediaRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x1f\n" +
	"\voutput_file\x18\x04 \x01(\tR\n" +
	"outputFile\x12F\n" +
	"\bmetadata\x18\x05 \x03(\v2*.media.v1.UploadMediaRequest.MetadataEntryR\bmetadata\x12\x1b\n" +
	"\tfile_data\x18\x06 \x01(\fR\bfileData\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x0fGetMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x10GetMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\"\xc8\x01\n" +
	"\x10ListMediaRequest\x12\x1d\n" +
	"\n" +
	"created_by\x18\x01 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\x12\x17\n" +
	"\asort_by\x18\x06 \x01(\tR\x06sortBy\x12\x1d\n" +
	"\n" +
	"sort_order\x18\a \x01(\tR\tsortOrder\"P\n" +
	"\x11ListMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x03(\v2\x0f.media.v1.MediaR\x05media\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xdc\x01\n" +
	"\x12UpdateMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12F\n" +
	"\bmetadata\x18\x04 \x03(\v2*.media.v1.UpdateMediaRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"<\n" +
	"\x13UpdateMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\"C\n" +
	"\x12DeleteMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tR\tcreatedBy\"/\n" +
	"\x13DeleteMediaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"4\n" +
	"\x17GetMediaVariantsRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\"N\n" +
	"\x18GetMediaVariantsResponse\x122\n" +
	"\bvariants\x18\x01 \x03(\v2\x16.media.v1.MediaVariantR\bvariants\"0\n" +
	"\x13ProcessMediaRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\"0\n" +
	"\x14ProcessMediaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xf7\x04\n" +
	"\fMediaService\x12J\n" +
	"\vUploadMedia\x12\x1c.media.v1.UploadMediaRequest\x1a\x1d.media.v1.UploadMediaResponse\x12P\n" +
	"\x11UploadMediaStream\x12\x1a.media.v1.UploadMediaChunk\x1a\x1d.media.v1.UploadMediaResponse(\x01\x12A\n" +
	"\bGetMedia\x12\x19.media.v1.GetMediaRequest\x1a\x1a.media.v1.GetMediaResponse\x12D\n" +
	"\tListMedia\x12\x1a.media.v1.ListMediaRequest\x1a\x1b.media.v1.ListMediaResponse\x12J\n" +
	"\vUpdateMedia\x12\x1c.media.v1.UpdateMediaRequest\x1a\x1d.media.v1.UpdateMediaResponse\x12J\n" +
	"\vDeleteMedia\x12\x1c.media.v1.DeleteMediaRequest\x1a\x1d.media.v1.DeleteMediaResponse\x12Y\n" +
	"\x10GetMediaVariants\x12!.media.v1.GetMediaVariantsRequest\x1a\".media.v1.GetMediaVariantsResponse\x12M\n" +
	"\fProcessMedia\x12\x1d.media.v1.ProcessMediaRequest\x1a\x1e.media.v1.ProcessMediaResponseB$Z\"media-service/proto/media/v1;mediab\x06proto3"

var (
	file_proto_media_v1_media_proto_rawDescOnce sync.Once
	file_proto_media_v1_media_proto_rawDescData []byte
)

func file_proto_media_v1_media_proto_rawDescGZIP() []byte {
	file_proto_media_v1_media_proto_rawDescOnce.Do(func() {
		file_proto_media_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_media_v1_media_proto_rawDesc), len(file_proto_media_v1_media_proto_rawDesc)))
	})
	return file_proto_media_v1_media_proto_rawDescData
}

var file_proto_media_v1_media_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_media_v1_media_proto_goTypes = []any{
	(*Media)(nil),                    // 0: media.v1.Media
	(*MediaVariant)(nil),             // 1: media.v1.MediaVariant
	(*UploadMediaStreamRequest)(nil), // 2: media.v1.UploadMediaStreamRequest
	(*UploadMediaChunk)(nil),         // 3: media.v1.UploadMediaChunk
	(*UploadMediaResponse)(nil),      // 4: media.v1.UploadMediaResponse
	(*UploadMediaRequest)(nil),       // 5: media.v1.UploadMediaRequest
	(*GetMediaRequest)(nil),          // 6: media.v1.GetMediaRequest
	(*GetMediaResponse)(nil),         // 7: media.v1.GetMediaResponse
	(*ListMediaRequest)(nil),         // 8: media.v1.ListMediaRequest
	(*ListMediaResponse)(nil),        // 9: media.v1.ListMediaResponse
	(*UpdateMediaRequest)(nil),       // 10: media.v1.UpdateMediaRequest
	(*UpdateMediaResponse)(nil),      // 11: media.v1.UpdateMediaResponse
	(*DeleteMediaRequest)(nil),       // 12: media.v1.DeleteMediaRequest
	(*DeleteMediaResponse)(nil),      // 13: media.v1.DeleteMediaResponse
	(*GetMediaVariantsRequest)(nil),  // 14: media.v1.GetMediaVariantsRequest
	(*GetMediaVariantsResponse)(nil), // 15: media.v1.GetMediaVariantsResponse
	(*ProcessMediaRequest)(nil),      // 16: media.v1.ProcessMediaRequest
	(*ProcessMediaResponse)(nil),     // 17: media.v1.ProcessMediaResponse
	nil,                              // 18: media.v1.Media.MetadataEntry
	nil,                              // 19: media.v1.UploadMediaStreamRequest.MetadataEntry
	nil,                              // 20: media.v1.UploadMediaRequest.MetadataEntry
	nil,                              // 21: media.v1.UpdateMediaRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 22: google.protobuf.Timestamp
}
var file_proto_media_v1_media_proto_depIdxs = []int32{
	18, // 0: media.v1.Media.metadata:type_name -> media.v1.Media.MetadataEntry
	22, // 1: media.v1.Media.created_at:type_name -> google.protobuf.Timestamp
	22, // 2: media.v1.Media.updated_at:type_name -> google.protobuf.Timestamp
	22, // 3: media.v1.MediaVariant.created_at:type_name -> google.protobuf.Timestamp
	19, // 4: media.v1.UploadMediaStreamRequest.metadata:type_name -> media.v1.UploadMediaStreamRequest.MetadataEntry
	2,  // 5: media.v1.UploadMediaChunk.info:type_name -> media.v1.UploadMediaStreamRequest
	0,  // 6: media.v1.UploadMediaResponse.media:type_name -> media.v1.Media
	20, // 7: media.v1.UploadMediaRequest.metadata:type_name -> media.v1.UploadMediaRequest.MetadataEntry
	0,  // 8: media.v1.GetMediaResponse.media:type_name -> media.v1.Media
	0,  // 9: media.v1.ListMediaResponse.media:type_name -> media.v1.Media
	21, // 10: media.v1.UpdateMediaRequest.metadata:type_name -> media.v1.UpdateMediaRequest.MetadataEntry
	0,  // 11: media.v1.UpdateMediaResponse.media:type_name -> media.v1.Media
	1,  // 12: media.v1.GetMediaVariantsResponse.variants:type_name -> media.v1.MediaVariant
	5,  // 13: media.v1.MediaService.UploadMedia:input_type -> media.v1.UploadMediaRequest
	3,  // 14: media.v1.MediaService.UploadMediaStream:input_type -> media.v1.UploadMediaChunk
	6,  // 15: media.v1.MediaService.GetMedia:input_type -> media.v1.GetMediaRequest
	8,  // 16: media.v1.MediaService.ListMedia:input_type -> media.v1.ListMediaRequest
	10, // 17: media.v1.MediaService.UpdateMedia:input_type -> media.v1.UpdateMediaRequest
	12, // 18: media.v1.MediaService.DeleteMedia:input_type -> media.v1.DeleteMediaRequest
	14, // 19: media.v1.MediaService.GetMediaVariants:input_type -> media.v1.GetMediaVariantsRequest
	16, // 20: media.v1.MediaService.ProcessMedia:input_type -> media.v1.ProcessMediaRequest
	4,  // 21: media.v1.MediaService.UploadMedia:output_type -> media.v1.UploadMediaResponse
	4,  // 22: media.v1.MediaService.UploadMediaStream:output_type -> media.v1.UploadMediaResponse
	7,  // 23: media.v1.MediaService.GetMedia:output_type -> media.v1.GetMediaResponse
	9,  // 24: media.v1.MediaService.ListMedia:output_type -> media.v1.ListMediaResponse
	11, // 25: media.v1.MediaService.UpdateMedia:output_type -> media.v1.UpdateMediaResponse
	13, // 26: media.v1.MediaService.DeleteMedia:output_type -> media.v1.DeleteMediaResponse
	15, // 27: media.v1.MediaService.GetMediaVariants:output_type -> media.v1.GetMediaVariantsResponse
	17, // 28: media.v1.MediaService.ProcessMedia:output_type -> media.v1.ProcessMediaResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_media_v1_media_proto_init() }
func file_proto_media_v1_media_proto_init() {
	if File_proto_media_v1_media_proto != nil {
		return
	}
	file_proto_media_v1_media_proto_msgTypes[3].OneofWrappers = []any{
		(*UploadMediaChunk_Info)(nil),
		(*UploadMediaChunk_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_media_v1_media_proto_rawDesc), len(file_proto_media_v1_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_media_v1_media_proto_goTypes,
		DependencyIndexes: file_proto_media_v1_media_proto_depIdxs,
		MessageInfos:      file_proto_media_v1_media_proto_msgTypes,
	}.Build()
	File_proto_media_v1_media_proto = out.File
	file_proto_media_v1_media_proto_goTypes = nil
	file_proto_media_v1_media_proto_depIdxs = nil
}
