syntax = "proto3";

package media.v1;

option go_package = "media-service/proto/media/v1;media";

import "google/protobuf/timestamp.proto";

// Media service definition
service MediaService {
  // Upload media with streaming
  rpc UploadMedia(stream UploadMediaChunk) returns (UploadMediaResponse);
  
  // Get media by ID
  rpc GetMedia(GetMediaRequest) returns (GetMediaResponse);
  
  // List media with filters
  rpc ListMedia(ListMediaRequest) returns (ListMediaResponse);
  
  // Update media metadata
  rpc UpdateMedia(UpdateMediaRequest) returns (UpdateMediaResponse);
  
  // Delete media
  rpc DeleteMedia(DeleteMediaRequest) returns (DeleteMediaResponse);
  
  // Get media variants
  rpc GetMediaVariants(GetMediaVariantsRequest) returns (GetMediaVariantsResponse);
  
  // Process media
  rpc ProcessMedia(ProcessMediaRequest) returns (ProcessMediaResponse);
}

// Messages
message Media {
  string id = 1;
  string created_by = 2;
  string name = 3;
  int64 size = 4;
  string url = 5;
  string mime_type = 6;
  string type = 7;
  int32 width = 8;
  int32 height = 9;
  int32 duration = 10;
  string processing_status = 11;
  map<string, string> metadata = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message MediaVariant {
  string id = 1;
  string media_id = 2;
  string type = 3;
  string size = 4;
  string url = 5;
  int64 file_size = 6;
  int32 width = 7;
  int32 height = 8;
  int32 quality = 9;
  string format = 10;
  google.protobuf.Timestamp created_at = 11;
}

// Upload requests/responses
message UploadMediaRequest {
  string file_name = 1;
  string mime_type = 2;
  string created_by = 3;
  map<string, string> metadata = 4;
}

message UploadMediaChunk {
  oneof data {
    UploadMediaRequest info = 1;
    bytes chunk = 2;
  }
}

message UploadMediaResponse {
  Media media = 1;
}

// Get requests/responses
message GetMediaRequest {
  string id = 1;
}

message GetMediaResponse {
  Media media = 1;
}

// List requests/responses
message ListMediaRequest {
  string created_by = 1;
  string type = 2;
  string mime_type = 3;
  int32 limit = 4;
  int32 offset = 5;
  string sort_by = 6;
  string sort_order = 7;
}

message ListMediaResponse {
  repeated Media media = 1;
  int32 total = 2;
}

// Update requests/responses
message UpdateMediaRequest {
  string id = 1;
  string created_by = 2;
  string name = 3;
  map<string, string> metadata = 4;
}

message UpdateMediaResponse {
  Media media = 1;
}

// Delete requests/responses
message DeleteMediaRequest {
  string id = 1;
  string created_by = 2;
}

message DeleteMediaResponse {
  bool success = 1;
}

// Variants requests/responses
message GetMediaVariantsRequest {
  string media_id = 1;
}

message GetMediaVariantsResponse {
  repeated MediaVariant variants = 1;
}

// Process requests/responses
message ProcessMediaRequest {
  string media_id = 1;
}

message ProcessMediaResponse {
  bool success = 1;
}
